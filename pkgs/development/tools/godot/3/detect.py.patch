diff --git a/platform/x11/detect.py b/platform/x11/detect.py
index 98c9ddb00b..1397521cbf 100644
--- a/platform/x11/detect.py
+++ b/platform/x11/detect.py
@@ -255,6 +255,10 @@ def configure(env):
     env.ParseConfig("pkg-config xrender --cflags --libs")
     env.ParseConfig("pkg-config xi --cflags --libs")
 
+    # Godot uses the libXi package. In nixpkgs, this package uses libXFixes. Its flags
+    # need to be added to the environment for the godot build to succeed.
+    env.ParseConfig("pkg-config xfixes --cflags --libs")
+
     if env["touch"]:
         env.Append(CPPDEFINES=["TOUCH_ENABLED"])
 
@@ -356,17 +360,20 @@ def configure(env):
 
     ## Flags
 
+    # Per the comments below, they omit the --libs flag because these libraries are loaded at runtime
+    # using dlopen. These dlopen calls fail for Nix-based builds. Adding the --libs flag resolves this.
+
     if os.system("pkg-config --exists alsa") == 0:  # 0 means found
         env["alsa"] = True
         env.Append(CPPDEFINES=["ALSA_ENABLED", "ALSAMIDI_ENABLED"])
-        env.ParseConfig("pkg-config alsa --cflags")  # Only cflags, we dlopen the library.
+        env.ParseConfig("pkg-config alsa --cflags --libs")  # Only cflags, we dlopen the library.
     else:
         print("Warning: ALSA libraries not found. Disabling the ALSA audio driver.")
 
     if env["pulseaudio"]:
         if os.system("pkg-config --exists libpulse") == 0:  # 0 means found
             env.Append(CPPDEFINES=["PULSEAUDIO_ENABLED"])
-            env.ParseConfig("pkg-config libpulse --cflags")  # Only cflags, we dlopen the library.
+            env.ParseConfig("pkg-config libpulse --cflags --libs")  # Only cflags, we dlopen the library.
         else:
             print("Warning: PulseAudio development libraries not found. Disabling the PulseAudio audio driver.")
 
@@ -375,7 +382,7 @@ def configure(env):
         if env["udev"]:
             if os.system("pkg-config --exists libudev") == 0:  # 0 means found
                 env.Append(CPPDEFINES=["UDEV_ENABLED"])
-                env.ParseConfig("pkg-config libudev --cflags")  # Only cflags, we dlopen the library.
+                env.ParseConfig("pkg-config libudev --cflags --libs")  # Only cflags, we dlopen the library.
             else:
                 print("Warning: libudev development libraries not found. Disabling controller hotplugging support.")
     else:
